{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/nav-button/nav-button.component.ts","webpack:///src/app/nav-button/nav-button.component.html","webpack:///src/app/toolbox-component/toolbox-component.component.ts","webpack:///src/app/toolbox-component/toolbox-component.component.html","webpack:///src/app/toolbox/toolbox.component.ts","webpack:///src/app/toolbox/toolbox.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","event","console","log","onButtonClicked","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","NavButtonComponent","callFunction","emit","onClick","encapsulation","None","ToolboxComponentComponent","ToolboxComponent","selectedToolSet","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,eAAR;AAID;;;;wCAHiBC,K,EAAO;AACrBC,iBAAO,CAACC,GAAR,CAAYF,KAAZ,EADqB,CACD;AACpB;;;;;;;uBAJSF,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,mZ;AAAA;AAAA;ACPrB;;AACI;;AACI;;AACA;;AAAe;;AAAf;;AACA;;AACI;;AAAc;;AAAyB;;AACvC;;AAAiB;;AAAM;;AAC3B;;AACJ;;AACA;;AACA;;AAA8C;AAAA,mBAAgB,IAAAK,eAAA,QAAhB;AAAuC,WAAvC;;AAA0C;;AACxF;;AAAqD;AAAA,mBAAgB,IAAAA,eAAA,QAAhB;AAAuC,WAAvC;;AAA0C;;AAC/F;;AAAsD;AAAA,mBAAgB,IAAAA,eAAA,QAAhB;AAAuC,WAAvC;;AAA0C;;AAChG;;AACI;;AAAkB;;AAAY;;AAClC;;AACJ;;AACA;;;;;;;;;sEDVSL,Y,EAAY;cALxB,uDAKwB;eALd;AACTM,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,oEAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB,EAXlB,mFAWkB,EAVlB,2EAUkB,EATlB,wGASkB;AATO,kBAGzB,uEAHyB,EAIzB,oEAJyB;AASP,O;AALF,K;;;;;sEAKPA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,2EAHY,EAIZ,wGAJY,CADN;AAORX,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,CAPD;AAWRY,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACvBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,kB;AAQX,oCAAc;AAAA;;AAFJ,aAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAEO;;;;mCAEN,CACV;;;gCAGOZ,K,EAAO;AACb,eAAKY,YAAL,CAAkBC,IAAlB,CAAuBb,KAAvB;AACD;;;;;;;uBAhBUW,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,iC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,oC;AAAA;AAAA;ACV/B;;AAAsC;AAAA,mBAAS,IAAAG,OAAA,QAAT;AAAwB,WAAxB;;AACnC;;AACH;;;;AAFsB;;AAAd;;AACL;;AAAA;;;;;;;;;sEDSUH,kB,EAAkB;cAP9B,uDAO8B;eAPpB;AACTP,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD,CAHF;AAITS,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAOoB,Q;;;;gBAC5B;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,yB;AAOX,2CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAVUA,yB;AAAyB,K;;;YAAzBA,yB;AAAyB,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,4R;AAAA;AAAA;ACPtC;;AACI;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AAAsB;;AAAS;;AAC/B;;AAAqB;;AAAe;;AACxC;;AACJ;;AACJ;;;;AAPiB;;AAAA;;AAGiB;;AAAA;;AACD;;AAAA;;;;;;;;sEDLpBA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTb,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK2B,Q;;;;gBAEnC;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaY,gB;AAKX,kCAAc;AAAA;;AACZ,aAAKC,eAAL,GAAuB,MAAvB;AACD;;;;mCAEO,CACP;;;;;;;uBAVUD,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,w6E;AAAA;AAAA;ACPzB;;AACI;;AACI;;AACJ;;AACA;;AAAe;;AAAgB;;AAC/B;;AACI;;AACA;;AACJ;;AACA;;AACI;;AAAqG;AAAA,yCAA2B,MAA3B;AAAiC,WAAjC;;AAAmC;;AAAI;;AAC5I;;AAAuG;AAAA,yCAA2B,WAA3B;AAAsC,WAAtC;;AAAwC;;AAAS;;AACxJ;;AAA2G;AAAA,yCAA2B,eAA3B;AAA0C,WAA1C;;AAA4C;;AAAa;;AACpK;;AAAmG;AAAA,yCAA2B,OAA3B;AAAkC,WAAlC;;AAAoC;;AAAK;;AAC5I;;AAA4G;AAAA,yCAA2B,gBAA3B;AAA2C,WAA3C;;AAA6C;;AAAc;;AAC3K;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACA;;AACA;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;AA7B2B;;AAAA;;AACY;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAGoB;;AAAA;;AAIL;;AAAA;;AAIS;;AAAA;;AAOR;;AAAA;;AAGS;;AAAA;;;;;;;;;sED5BvDA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTd,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMc,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAItB,OAAO,CAACuB,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chemmlAngluar';\n  onButtonClicked(event) {\n    console.log(event); // handle button clicked here.\n   }\n}\n","    <div id=\"navigation\">\n        <div id=\"leftside\">\n            <div id=\"details\">\n            <div id=\"back\"><img src=\"assets/arrow.svg\"></div>\n            <div id=\"names\">\n                <p id=\"title\">Machine Learning Pipeline</p>\n                <p id=\"subtitle\">Portal</p>\n            </div>\n        </div>            \n        </div>\n        <nav-button description=\"Home\" class=\"button\" (callFunction)=\"onButtonClicked($event)\" ></nav-button>\n        <nav-button description=\"New Project\" class=\"button\" (callFunction)=\"onButtonClicked($event)\" ></nav-button>\n        <nav-button description=\"Open Project\" class=\"button\" (callFunction)=\"onButtonClicked($event)\" ></nav-button>\n        <div id=\"buttonsright\">\n            <div id=\"publish\">Run Pipeline</div>\n        </div>\n    </div>\n    <app-toolbox></app-toolbox>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavButtonComponent } from './nav-button/nav-button.component';\nimport { ToolboxComponent } from './toolbox/toolbox.component';\nimport { ToolboxComponentComponent } from './toolbox-component/toolbox-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavButtonComponent,\n    ToolboxComponent,\n    ToolboxComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'nav-button',\n  templateUrl: './nav-button.component.html',\n  styleUrls: ['./nav-button.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NavButtonComponent implements OnInit {\n  @Input() group: FormGroup;\n  @Input() type: string;\n  @Input() description: string;\n  @Input() class: string;\n  @Input() data: string;\n  @Output() callFunction = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  onClick(event) {\n    this.callFunction.emit(event);\n  }\n}\n","<button [type]=\"type\" [class]=\"class\" (click)=\"onClick($event)\">\n   {{ description }}\n</button>\n","import { Component, OnInit, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbox-component',\n  templateUrl: './toolbox-component.component.html',\n  styleUrls: ['./toolbox-component.component.css']\n})\nexport class ToolboxComponentComponent implements OnInit {\n\n  @Input() description: string;\n  @Input() title: string;\n  @Input() toot_type: string;\n  @Input() tool: string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"blockelem create-flowy noselect\">\n    <input type=\"hidden\" name='blockelemtype' class=\"blockelemtype\" value=\"4\">\n    <div class=\"grabme\">\n        <img src=\"assets/grabme.svg\">\n    </div>\n    <div class=\"blockin\">\n        <div class=\"blockico\">\n            <span></span>\n            <img src=\"assets/{{tool}}.svg\">\n        </div>\n        <div class=\"blocktext\">\n            <p class=\"blocktitle\">{{title}}</p>\n            <p class=\"blockdesc\">{{description}}</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbox',\n  templateUrl: './toolbox.component.html',\n  styleUrls: ['./toolbox.component.css']\n})\nexport class ToolboxComponent implements OnInit {\n\n  selectedToolSet: string;\n\n\n  constructor() { \n    this.selectedToolSet = \"Data\"\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","    <div id=\"leftcard\">\n        <div id=\"closecard\" onclick=\"document.getElementById('leftcard').style.opacity=1 - document.getElementById('leftcard').style.opacity;\">\n            <img src=\"assets/closeleft.svg\">\n        </div>\n        <p id=\"header\">Pipeline Toolbox</p>\n        <div id=\"search\">\n            <img src=\"assets/search.svg\">\n            <input type=\"text\" placeholder=\"Search Pipeline Toolbox\">\n        </div>\n        <div id=\"subnav\">\n            <div id=\"actions\"  [ngClass]=\"selectedToolSet==='Data' ? 'navactive' : 'navdisabled'\" class=\"side\"   (click)=\"selectedToolSet = 'Data'\">Data</div>\n            <div id=\"actions\" class=\"side\" [ngClass]=\"selectedToolSet==='Represent' ? 'navactive' : 'navdisabled'\" (click)=\"selectedToolSet = 'Represent'\">Represent</div>\n            <div id=\"actions\" class=\"side\" [ngClass]=\"selectedToolSet==='Preprocessing' ? 'navactive' : 'navdisabled'\" (click)=\"selectedToolSet = 'Preprocessing'\">Preprocessing</div>\n            <div id=\"loggers\" class=\"side\" [ngClass]=\"selectedToolSet==='Model' ? 'navactive' : 'navdisabled'\" (click)=\"selectedToolSet = 'Model'\">Model</div>\n            <div id=\"loggers\" class=\"side\" [ngClass]=\"selectedToolSet==='Postprocessing' ? 'navactive' : 'navdisabled'\" (click)=\"selectedToolSet = 'Postprocessing'\">Postprocessing</div>\n        </div>\n        <div class = \"toolset_container\">\n            <div class = \"toolset-holder\" tooltype=\"Represent\" [hidden]=\"selectedToolSet !=='Represent'\">\n                <app-toolbox-component tooltype=\"Represent\" tool=\"error\" title=\"Dimentionality Reduction\" description=\"Drag the tool to perform FactorAnalysis, PCA etc.\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Represent\" tool=\"error\"  title=\"Chemical Representation\" description=\"Drag the tool to represent data using chemml chemical representations\"></app-toolbox-component>\n            </div>\n            <div class = \"toolset-holder\" tooltype=\"Data\" [hidden]=\"selectedToolSet !=='Data'\">\n                <app-toolbox-component tooltype=\"Data\" tool=\"csv\" title=\"Import data from CSV\" description=\"Drag the button to add a CSV Data tool to the pipeline\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Data\" tool=\"chemical_data\" title=\"Import chemical data\" description=\"Drag the button to add a chemistry Data tool to the pipeline\"></app-toolbox-component>\n            </div>\n            <div class = \"toolset-holder\" tooltype=\"Preprocessing\" [hidden]=\"selectedToolSet !=='Preprocessing'\">\n                <app-toolbox-component tooltype=\"Preprocessing\"  tool=\"error\" title=\"Add MaxAbs Scaler\" description=\"Scale each feature by its maximum absolute value.\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Preprocessing\"  tool=\"error\" title=\"Add MinMax Scaler\" description=\"Transform features by scaling each feature to a given range.\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Preprocessing\"  tool=\"error\" title=\"Add Normalizer\" description=\"Normalize samples individually to unit norm.\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Preprocessing\"  tool=\"error\" title=\"Add OneHot Encoder\" description=\"Encode categorical features as a one-hot numeric array.\"></app-toolbox-component>\n                <app-toolbox-component tooltype=\"Preprocessing\"  tool=\"error\" title=\"Add Standard Scaler\" description=\"Standardize features by removing the mean and scaling to unit variance/\"></app-toolbox-component>\n            </div>\n            <div class = \"toolset-holder\" tooltype=\"Model\" [hidden]=\"selectedToolSet !=='Model'\">\n                <app-toolbox-component tooltype=\"Model\"  tool=\"error\" title=\"Import data from CSV\" description=\"Drag the button to add a CSV Data tool to the pipeline\"></app-toolbox-component>\n            </div>\n            <div class = \"toolset-holder\" tooltype=\"Postprocessing\" [hidden]=\"selectedToolSet !=='Postprocessing'\">\n                <app-toolbox-component tooltype=\"Postprocessing\"  tool=\"error\" title=\"Import data from CSV\" description=\"Drag the button to add a CSV Data tool to the pipeline\"></app-toolbox-component>\n            </div>\n        </div>\n    </div> ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}