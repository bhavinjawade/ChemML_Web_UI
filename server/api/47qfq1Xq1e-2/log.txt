01/07/2021 06:13:10 AM =================================================
01/07/2021 06:13:10 AM ChemMLWrapper 0.6.0 (August 2019)
01/07/2021 06:13:10 AM Mojtaba Haghighatlari (mojtabah@buffalo.edu)
01/07/2021 06:13:10 AM Johannes Hachmann (hachmann@buffalo.edu)
01/07/2021 06:13:10 AM =================================================
01/07/2021 06:13:10 AM Thu Jan  7 06:13:10 2021
01/07/2021 06:13:10 AM 
01/07/2021 06:13:10 AM parsing the input dictionary ...

01/07/2021 06:13:10 AM 1   ID1: read_csv (pandas)
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         nothing to receive!
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID4
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 2   ID4: Select_Columns_By_Index (chemml)
01/07/2021 06:13:10 AM         method = fit
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID1
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 3   ID5: train_test_split (sklearn)
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID4
01/07/2021 06:13:10 AM         ID4
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID6
01/07/2021 06:13:10 AM         ID6
01/07/2021 06:13:10 AM         ID7
01/07/2021 06:13:10 AM         ID8
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 4   ID6: RandomForestClassifier (sklearn)
01/07/2021 06:13:10 AM         method = fit
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID7
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 5   ID7: RandomForestClassifier (sklearn)
01/07/2021 06:13:10 AM         method = predict
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID6
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID8
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 6   ID8: accuracy_score (sklearn)
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID5
01/07/2021 06:13:10 AM         ID7
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         ID9
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM 7   ID9: SaveFile (chemml)
01/07/2021 06:13:10 AM         method = write
01/07/2021 06:13:10 AM         <<<<<<< receive from:
01/07/2021 06:13:10 AM         ID8
01/07/2021 06:13:10 AM         >>>>>>> send to:
01/07/2021 06:13:10 AM         nothing to send!
01/07/2021 06:13:10 AM         
01/07/2021 06:13:10 AM =================================================
01/07/2021 06:13:10 AM * Based on the dependencies, we run nodes in the 
01/07/2021 06:13:10 AM   following order:
01/07/2021 06:13:10 AM   ['ID1']
01/07/2021 06:13:10 AM   ['ID4']
01/07/2021 06:13:10 AM   ['ID5']
01/07/2021 06:13:10 AM   ['ID6']
01/07/2021 06:13:10 AM   ['ID7']
01/07/2021 06:13:10 AM   ['ID8']
01/07/2021 06:13:10 AM   ['ID9']
01/07/2021 06:13:10 AM * The outputs will be stored in the following 
01/07/2021 06:13:10 AM directory: ./47qfq1Xq1e-2
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM ======= node ID#ID1: (read_csv, pandas)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: df
01/07/2021 06:13:10 AM       size: 19952 bytes (total: 19952 bytes)
01/07/2021 06:13:10 AM       type: <class 'pandas.core.frame.DataFrame'>
01/07/2021 06:13:10 AM       shape: (178, 13)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.01s (0h 0m 0.01s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID4: (Select_Columns_By_Index, chemml)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: X1
01/07/2021 06:13:10 AM       size: 112 bytes (total: 112 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (178, 12)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM       name: X2
01/07/2021 06:13:10 AM       size: 112 bytes (total: 224 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (178, 1)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.01s (0h 0m 0.01s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID5: (train_test_split, sklearn)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: train1
01/07/2021 06:13:10 AM       size: 13744 bytes (total: 13744 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (142, 12)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM       name: test1
01/07/2021 06:13:10 AM       size: 3568 bytes (total: 17312 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (36, 12)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM       name: train2
01/07/2021 06:13:10 AM       size: 1248 bytes (total: 18560 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (142, 1)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM       name: test2
01/07/2021 06:13:10 AM       size: 400 bytes (total: 18960 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (36, 1)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.03s (0h 0m 0.03s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID6: (RandomForestClassifier, sklearn)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: obj
01/07/2021 06:13:10 AM       size: 48 bytes (total: 4016 bytes)
01/07/2021 06:13:10 AM       type: <class 'sklearn.ensemble._forest.RandomForestClassifier'>
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.13s (0h 0m 0.13s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID7: (RandomForestClassifier, sklearn)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: C
01/07/2021 06:13:10 AM       size: 384 bytes (total: 784 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.ndarray'>
01/07/2021 06:13:10 AM       shape: (36,)
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.01s (0h 0m 0.01s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID8: (accuracy_score, sklearn)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM ... preparing outputs:
01/07/2021 06:13:10 AM       name: result
01/07/2021 06:13:10 AM       size: 32 bytes (total: 32 bytes)
01/07/2021 06:13:10 AM       type: <class 'numpy.float64'>
01/07/2021 06:13:10 AM       -----
01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.01s (0h 0m 0.01s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM ======= node ID#ID9: (SaveFile, chemml)
01/07/2021 06:13:10 AM | run ...

01/07/2021 06:13:10 AM 

01/07/2021 06:13:10 AM | ... done!
01/07/2021 06:13:10 AM | execution time: 0.01s (0h 0m 0.01s)
01/07/2021 06:13:10 AM =======


01/07/2021 06:13:10 AM Total execution time: 0.22s (0h 0m 0.22s)
01/07/2021 06:13:10 AM 2021-01-07 06:13:10

01/07/2021 06:13:10 AM =================================================
