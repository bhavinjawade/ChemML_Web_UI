08/19/2020 06:38:44 PM =================================================
08/19/2020 06:38:44 PM ChemMLWrapper 0.6.0 (August 2019)
08/19/2020 06:38:44 PM Mojtaba Haghighatlari (mojtabah@buffalo.edu)
08/19/2020 06:38:44 PM Johannes Hachmann (hachmann@buffalo.edu)
08/19/2020 06:38:44 PM =================================================
08/19/2020 06:38:44 PM Wed Aug 19 18:38:44 2020
08/19/2020 06:38:44 PM 
08/19/2020 06:38:44 PM parsing the input dictionary ...

08/19/2020 06:38:44 PM 1   ID1: read_csv (pandas)
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         nothing to receive!
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID2
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 2   ID2: StandardScaler (sklearn)
08/19/2020 06:38:44 PM         method = fit_transform
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID1
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID3
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 3   ID3: PCA (sklearn)
08/19/2020 06:38:44 PM         method = fit_transform
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID2
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID4
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 4   ID4: SplitColumns (chemml)
08/19/2020 06:38:44 PM         method = fit
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID3
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 5   ID5: train_test_split (sklearn)
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID4
08/19/2020 06:38:44 PM         ID4
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID6
08/19/2020 06:38:44 PM         ID6
08/19/2020 06:38:44 PM         ID7
08/19/2020 06:38:44 PM         ID8
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 6   ID6: LinearRegression (sklearn)
08/19/2020 06:38:44 PM         method = fit
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID7
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 7   ID7: LinearRegression (sklearn)
08/19/2020 06:38:44 PM         method = predict
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID6
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID8
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 8   ID8: mean_absolute_error (sklearn)
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID7
08/19/2020 06:38:44 PM         ID5
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         ID9
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM 9   ID9: SaveFile (chemml)
08/19/2020 06:38:44 PM         method = write
08/19/2020 06:38:44 PM         <<<<<<< receive from:
08/19/2020 06:38:44 PM         ID8
08/19/2020 06:38:44 PM         >>>>>>> send to:
08/19/2020 06:38:44 PM         nothing to send!
08/19/2020 06:38:44 PM         
08/19/2020 06:38:44 PM =================================================
08/19/2020 06:38:44 PM * Based on the dependencies, we run nodes in the 
08/19/2020 06:38:44 PM   following order:
08/19/2020 06:38:44 PM   ['ID1']
08/19/2020 06:38:44 PM   ['ID2']
08/19/2020 06:38:44 PM   ['ID3']
08/19/2020 06:38:44 PM   ['ID4']
08/19/2020 06:38:44 PM   ['ID5']
08/19/2020 06:38:44 PM   ['ID6']
08/19/2020 06:38:44 PM   ['ID7']
08/19/2020 06:38:44 PM   ['ID8']
08/19/2020 06:38:44 PM   ['ID9']
08/19/2020 06:38:44 PM * The outputs will be stored in the following 
08/19/2020 06:38:44 PM directory: ./Gglhv
08/19/2020 06:38:44 PM 

08/19/2020 06:38:44 PM ======= node ID#ID1: (read_csv, pandas)
08/19/2020 06:38:44 PM | run ...

08/19/2020 06:38:44 PM ... preparing outputs:
08/19/2020 06:38:44 PM       name: df
08/19/2020 06:38:44 PM       size: 60736 bytes (total: 60736 bytes)
08/19/2020 06:38:44 PM       type: <class 'pandas.core.frame.DataFrame'>
08/19/2020 06:38:44 PM       shape: (506, 14)
08/19/2020 06:38:44 PM       -----
08/19/2020 06:38:44 PM 

08/19/2020 06:38:44 PM | ... done!
08/19/2020 06:38:44 PM | execution time: 0.04s (0h 0m 0.04s)
08/19/2020 06:38:44 PM =======


08/19/2020 06:38:44 PM ======= node ID#ID2: (StandardScaler, sklearn)
08/19/2020 06:38:44 PM | run ...

08/19/2020 06:38:48 PM ... preparing outputs:
08/19/2020 06:38:48 PM       name: X_new
08/19/2020 06:38:48 PM       size: 112 bytes (total: 112 bytes)
08/19/2020 06:38:48 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:48 PM       shape: (506, 14)
08/19/2020 06:38:48 PM       -----
08/19/2020 06:38:48 PM 

08/19/2020 06:38:48 PM | ... done!
08/19/2020 06:38:48 PM | execution time: 3.07s (0h 0m 3.07s)
08/19/2020 06:38:48 PM =======


08/19/2020 06:38:48 PM ======= node ID#ID3: (PCA, sklearn)
08/19/2020 06:38:48 PM | run ...

08/19/2020 06:38:48 PM ... preparing outputs:
08/19/2020 06:38:48 PM       name: X_new
08/19/2020 06:38:48 PM       size: 112 bytes (total: 112 bytes)
08/19/2020 06:38:48 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:48 PM       shape: (506, 14)
08/19/2020 06:38:48 PM       -----
08/19/2020 06:38:48 PM 

08/19/2020 06:38:48 PM | ... done!
08/19/2020 06:38:48 PM | execution time: 0.48s (0h 0m 0.48s)
08/19/2020 06:38:48 PM =======


08/19/2020 06:38:48 PM ======= node ID#ID4: (SplitColumns, chemml)
08/19/2020 06:38:48 PM | run ...

08/19/2020 06:38:49 PM ... preparing outputs:
08/19/2020 06:38:49 PM       name: X1
08/19/2020 06:38:49 PM       size: 112 bytes (total: 112 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (506, 1)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM       name: X2
08/19/2020 06:38:49 PM       size: 112 bytes (total: 224 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (506, 13)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.65s (0h 0m 0.65s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM ======= node ID#ID5: (train_test_split, sklearn)
08/19/2020 06:38:49 PM | run ...

08/19/2020 06:38:49 PM ... preparing outputs:
08/19/2020 06:38:49 PM       name: test1
08/19/2020 06:38:49 PM       size: 10720 bytes (total: 10720 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (102, 13)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM       name: test2
08/19/2020 06:38:49 PM       size: 928 bytes (total: 11648 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (102, 1)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM       name: train1
08/19/2020 06:38:49 PM       size: 42128 bytes (total: 53776 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (404, 13)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM       name: train2
08/19/2020 06:38:49 PM       size: 3344 bytes (total: 57120 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (404, 1)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.02s (0h 0m 0.02s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM ======= node ID#ID6: (LinearRegression, sklearn)
08/19/2020 06:38:49 PM | run ...

08/19/2020 06:38:49 PM ... preparing outputs:
08/19/2020 06:38:49 PM       name: obj
08/19/2020 06:38:49 PM       size: 48 bytes (total: 11696 bytes)
08/19/2020 06:38:49 PM       type: <class 'sklearn.linear_model._base.LinearRegression'>
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.01s (0h 0m 0.01s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM ======= node ID#ID7: (LinearRegression, sklearn)
08/19/2020 06:38:49 PM | run ...

08/19/2020 06:38:49 PM ... preparing outputs:
08/19/2020 06:38:49 PM       name: C
08/19/2020 06:38:49 PM       size: 928 bytes (total: 1856 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.ndarray'>
08/19/2020 06:38:49 PM       shape: (102, 1)
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.01s (0h 0m 0.01s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM ======= node ID#ID8: (mean_absolute_error, sklearn)
08/19/2020 06:38:49 PM | run ...

08/19/2020 06:38:49 PM ... preparing outputs:
08/19/2020 06:38:49 PM       name: loss
08/19/2020 06:38:49 PM       size: 32 bytes (total: 32 bytes)
08/19/2020 06:38:49 PM       type: <class 'numpy.float64'>
08/19/2020 06:38:49 PM       -----
08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.00s (0h 0m 0.00s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM ======= node ID#ID9: (SaveFile, chemml)
08/19/2020 06:38:49 PM | run ...

08/19/2020 06:38:49 PM 

08/19/2020 06:38:49 PM | ... done!
08/19/2020 06:38:49 PM | execution time: 0.00s (0h 0m 0.00s)
08/19/2020 06:38:49 PM =======


08/19/2020 06:38:49 PM Total execution time: 4.31s (0h 0m 4.31s)
08/19/2020 06:38:49 PM 2020-08-19 18:38:49

08/19/2020 06:38:49 PM =================================================
