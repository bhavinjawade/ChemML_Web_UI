10/06/2020 08:46:56 PM =================================================
10/06/2020 08:46:56 PM ChemMLWrapper 0.6.0 (August 2019)
10/06/2020 08:46:56 PM Mojtaba Haghighatlari (mojtabah@buffalo.edu)
10/06/2020 08:46:56 PM Johannes Hachmann (hachmann@buffalo.edu)
10/06/2020 08:46:56 PM =================================================
10/06/2020 08:46:56 PM Tue Oct  6 20:46:56 2020
10/06/2020 08:46:56 PM 
10/06/2020 08:46:56 PM parsing the input dictionary ...

10/06/2020 08:46:56 PM 1   ID1: read_csv (pandas)
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         nothing to receive!
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID2
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 2   ID2: StandardScaler (sklearn)
10/06/2020 08:46:56 PM         method = fit_transform
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID1
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID3
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 3   ID3: PCA (sklearn)
10/06/2020 08:46:56 PM         method = fit_transform
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID2
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID4
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 4   ID4: SplitColumns (chemml)
10/06/2020 08:46:56 PM         method = fit
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID3
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 5   ID5: train_test_split (sklearn)
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID4
10/06/2020 08:46:56 PM         ID4
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID6
10/06/2020 08:46:56 PM         ID6
10/06/2020 08:46:56 PM         ID7
10/06/2020 08:46:56 PM         ID8
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 6   ID6: LinearRegression (sklearn)
10/06/2020 08:46:56 PM         method = fit
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID7
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 7   ID7: LinearRegression (sklearn)
10/06/2020 08:46:56 PM         method = predict
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID6
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID8
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 8   ID8: mean_absolute_error (sklearn)
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID7
10/06/2020 08:46:56 PM         ID5
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         ID9
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM 9   ID9: SaveFile (chemml)
10/06/2020 08:46:56 PM         method = write
10/06/2020 08:46:56 PM         <<<<<<< receive from:
10/06/2020 08:46:56 PM         ID8
10/06/2020 08:46:56 PM         >>>>>>> send to:
10/06/2020 08:46:56 PM         nothing to send!
10/06/2020 08:46:56 PM         
10/06/2020 08:46:56 PM =================================================
10/06/2020 08:46:56 PM * Based on the dependencies, we run nodes in the 
10/06/2020 08:46:56 PM   following order:
10/06/2020 08:46:56 PM   ['ID1']
10/06/2020 08:46:56 PM   ['ID2']
10/06/2020 08:46:56 PM   ['ID3']
10/06/2020 08:46:56 PM   ['ID4']
10/06/2020 08:46:56 PM   ['ID5']
10/06/2020 08:46:56 PM   ['ID6']
10/06/2020 08:46:56 PM   ['ID7']
10/06/2020 08:46:56 PM   ['ID8']
10/06/2020 08:46:56 PM   ['ID9']
10/06/2020 08:46:56 PM * The outputs will be stored in the following 
10/06/2020 08:46:56 PM directory: ./lgRkf
10/06/2020 08:46:56 PM 

10/06/2020 08:46:56 PM ======= node ID#ID1: (read_csv, pandas)
10/06/2020 08:46:56 PM | run ...

10/06/2020 08:46:56 PM ... preparing outputs:
10/06/2020 08:46:56 PM       name: df
10/06/2020 08:46:56 PM       size: 60736 bytes (total: 60736 bytes)
10/06/2020 08:46:56 PM       type: <class 'pandas.core.frame.DataFrame'>
10/06/2020 08:46:56 PM       shape: (506, 14)
10/06/2020 08:46:56 PM       -----
10/06/2020 08:46:56 PM 

10/06/2020 08:46:56 PM | ... done!
10/06/2020 08:46:56 PM | execution time: 0.09s (0h 0m 0.09s)
10/06/2020 08:46:56 PM =======


10/06/2020 08:46:56 PM ======= node ID#ID2: (StandardScaler, sklearn)
10/06/2020 08:46:56 PM | run ...

10/06/2020 08:46:57 PM ... preparing outputs:
10/06/2020 08:46:57 PM       name: X_new
10/06/2020 08:46:57 PM       size: 112 bytes (total: 112 bytes)
10/06/2020 08:46:57 PM       type: <class 'numpy.ndarray'>
10/06/2020 08:46:57 PM       shape: (506, 14)
10/06/2020 08:46:57 PM       -----
10/06/2020 08:46:57 PM 

10/06/2020 08:46:57 PM | ... done!
10/06/2020 08:46:57 PM | execution time: 0.86s (0h 0m 0.86s)
10/06/2020 08:46:57 PM =======


10/06/2020 08:46:57 PM ======= node ID#ID3: (PCA, sklearn)
10/06/2020 08:46:57 PM | run ...

10/06/2020 08:46:58 PM ... preparing outputs:
10/06/2020 08:46:58 PM       name: X_new
10/06/2020 08:46:58 PM       size: 112 bytes (total: 112 bytes)
10/06/2020 08:46:58 PM       type: <class 'numpy.ndarray'>
10/06/2020 08:46:58 PM       shape: (506, 14)
10/06/2020 08:46:58 PM       -----
10/06/2020 08:46:58 PM 

10/06/2020 08:46:58 PM | ... done!
10/06/2020 08:46:58 PM | execution time: 0.26s (0h 0m 0.26s)
10/06/2020 08:46:58 PM =======


10/06/2020 08:46:58 PM ======= node ID#ID4: (SplitColumns, chemml)
10/06/2020 08:46:58 PM | run ...

10/06/2020 08:46:58 PM ... preparing outputs:
10/06/2020 08:46:58 PM       name: X1
10/06/2020 08:46:58 PM       size: 112 bytes (total: 112 bytes)
10/06/2020 08:46:58 PM       type: <class 'numpy.ndarray'>
10/06/2020 08:46:58 PM       shape: (506, 1)
10/06/2020 08:46:58 PM       -----
10/06/2020 08:46:58 PM       name: X2
10/06/2020 08:46:58 PM       size: 112 bytes (total: 224 bytes)
10/06/2020 08:46:58 PM       type: <class 'numpy.ndarray'>
10/06/2020 08:46:58 PM       shape: (506, 13)
10/06/2020 08:46:58 PM       -----
10/06/2020 08:46:58 PM 

10/06/2020 08:46:58 PM | ... done!
10/06/2020 08:46:58 PM | execution time: 0.38s (0h 0m 0.38s)
10/06/2020 08:46:58 PM =======


10/06/2020 08:46:58 PM ======= node ID#ID5: (train_test_split, sklearn)
10/06/2020 08:46:58 PM | run ...

