07/23/2020 02:18:29 PM =================================================
07/23/2020 02:18:29 PM ChemMLWrapper 0.6.0 (August 2019)
07/23/2020 02:18:29 PM Mojtaba Haghighatlari (mojtabah@buffalo.edu)
07/23/2020 02:18:29 PM Johannes Hachmann (hachmann@buffalo.edu)
07/23/2020 02:18:29 PM =================================================
07/23/2020 02:18:29 PM Thu Jul 23 14:18:29 2020
07/23/2020 02:18:29 PM 
07/23/2020 02:18:29 PM parsing the input dictionary ...

07/23/2020 02:18:29 PM 1   ID1: read_csv (pandas)
07/23/2020 02:18:29 PM         <<<<<<< receive from:
07/23/2020 02:18:29 PM         nothing to receive!
07/23/2020 02:18:29 PM         >>>>>>> send to:
07/23/2020 02:18:29 PM         ID2
07/23/2020 02:18:29 PM         
07/23/2020 02:18:29 PM 2   ID2: StandardScaler (sklearn)
07/23/2020 02:18:29 PM         method = fit_transform
07/23/2020 02:18:29 PM         <<<<<<< receive from:
07/23/2020 02:18:29 PM         ID1
07/23/2020 02:18:29 PM         >>>>>>> send to:
07/23/2020 02:18:29 PM         ID3
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 3   ID3: PCA (sklearn)
07/23/2020 02:18:30 PM         method = fit_transform
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID2
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID4
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 4   ID4: SplitColumns (chemml)
07/23/2020 02:18:30 PM         method = fit
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID3
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 5   ID5: train_test_split (sklearn)
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID4
07/23/2020 02:18:30 PM         ID4
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID6
07/23/2020 02:18:30 PM         ID6
07/23/2020 02:18:30 PM         ID7
07/23/2020 02:18:30 PM         ID8
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 6   ID6: LinearRegression (sklearn)
07/23/2020 02:18:30 PM         method = fit
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID7
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 7   ID7: LinearRegression (sklearn)
07/23/2020 02:18:30 PM         method = predict
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID6
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID8
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 8   ID8: accuracy_score (sklearn)
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID7
07/23/2020 02:18:30 PM         ID5
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         ID9
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM 9   ID9: SaveFile (chemml)
07/23/2020 02:18:30 PM         method = write
07/23/2020 02:18:30 PM         <<<<<<< receive from:
07/23/2020 02:18:30 PM         ID8
07/23/2020 02:18:30 PM         >>>>>>> send to:
07/23/2020 02:18:30 PM         nothing to send!
07/23/2020 02:18:30 PM         
07/23/2020 02:18:30 PM =================================================
07/23/2020 02:18:30 PM * Based on the dependencies, we run nodes in the 
07/23/2020 02:18:30 PM   following order:
07/23/2020 02:18:30 PM   ['ID1']
07/23/2020 02:18:30 PM   ['ID2']
07/23/2020 02:18:30 PM   ['ID3']
07/23/2020 02:18:30 PM   ['ID4']
07/23/2020 02:18:30 PM   ['ID5']
07/23/2020 02:18:30 PM   ['ID6']
07/23/2020 02:18:30 PM   ['ID7']
07/23/2020 02:18:30 PM   ['ID8']
07/23/2020 02:18:30 PM   ['ID9']
07/23/2020 02:18:30 PM * The outputs will be stored in the following 
07/23/2020 02:18:30 PM directory: ./sGm8K
07/23/2020 02:18:30 PM 

07/23/2020 02:18:30 PM ======= node ID#ID1: (read_csv, pandas)
07/23/2020 02:18:30 PM | run ...

07/23/2020 02:18:30 PM ... preparing outputs:
07/23/2020 02:18:30 PM       name: df
07/23/2020 02:18:30 PM       size: 60752 bytes (total: 60752 bytes)
07/23/2020 02:18:30 PM       type: <class 'pandas.core.frame.DataFrame'>
07/23/2020 02:18:30 PM       shape: (506, 14)
07/23/2020 02:18:30 PM       -----
07/23/2020 02:18:30 PM 

07/23/2020 02:18:30 PM | ... done!
07/23/2020 02:18:30 PM | execution time: 0.07s (0h 0m 0.07s)
07/23/2020 02:18:30 PM =======


07/23/2020 02:18:30 PM ======= node ID#ID2: (StandardScaler, sklearn)
07/23/2020 02:18:30 PM | run ...

07/23/2020 02:18:32 PM ... preparing outputs:
07/23/2020 02:18:32 PM       name: X_new
07/23/2020 02:18:32 PM       size: 112 bytes (total: 112 bytes)
07/23/2020 02:18:32 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:32 PM       shape: (506, 14)
07/23/2020 02:18:32 PM       -----
07/23/2020 02:18:32 PM 

07/23/2020 02:18:32 PM | ... done!
07/23/2020 02:18:32 PM | execution time: 1.65s (0h 0m 1.65s)
07/23/2020 02:18:32 PM =======


07/23/2020 02:18:32 PM ======= node ID#ID3: (PCA, sklearn)
07/23/2020 02:18:32 PM | run ...

07/23/2020 02:18:32 PM ... preparing outputs:
07/23/2020 02:18:32 PM       name: X_new
07/23/2020 02:18:32 PM       size: 112 bytes (total: 112 bytes)
07/23/2020 02:18:32 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:32 PM       shape: (506, 14)
07/23/2020 02:18:32 PM       -----
07/23/2020 02:18:32 PM 

07/23/2020 02:18:32 PM | ... done!
07/23/2020 02:18:32 PM | execution time: 0.22s (0h 0m 0.22s)
07/23/2020 02:18:32 PM =======


07/23/2020 02:18:32 PM ======= node ID#ID4: (SplitColumns, chemml)
07/23/2020 02:18:32 PM | run ...

07/23/2020 02:18:32 PM ... preparing outputs:
07/23/2020 02:18:32 PM       name: X1
07/23/2020 02:18:32 PM       size: 112 bytes (total: 112 bytes)
07/23/2020 02:18:32 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:32 PM       shape: (506, 1)
07/23/2020 02:18:32 PM       -----
07/23/2020 02:18:32 PM       name: X2
07/23/2020 02:18:32 PM       size: 112 bytes (total: 224 bytes)
07/23/2020 02:18:32 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:32 PM       shape: (506, 13)
07/23/2020 02:18:32 PM       -----
07/23/2020 02:18:32 PM 

07/23/2020 02:18:32 PM | ... done!
07/23/2020 02:18:32 PM | execution time: 0.33s (0h 0m 0.33s)
07/23/2020 02:18:33 PM =======


07/23/2020 02:18:33 PM ======= node ID#ID5: (train_test_split, sklearn)
07/23/2020 02:18:33 PM | run ...

07/23/2020 02:18:33 PM ... preparing outputs:
07/23/2020 02:18:33 PM       name: test1
07/23/2020 02:18:33 PM       size: 10720 bytes (total: 10720 bytes)
07/23/2020 02:18:33 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:33 PM       shape: (102, 13)
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM       name: test2
07/23/2020 02:18:33 PM       size: 928 bytes (total: 11648 bytes)
07/23/2020 02:18:33 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:33 PM       shape: (102, 1)
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM       name: train1
07/23/2020 02:18:33 PM       size: 42128 bytes (total: 53776 bytes)
07/23/2020 02:18:33 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:33 PM       shape: (404, 13)
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM       name: train2
07/23/2020 02:18:33 PM       size: 3344 bytes (total: 57120 bytes)
07/23/2020 02:18:33 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:33 PM       shape: (404, 1)
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM 

07/23/2020 02:18:33 PM | ... done!
07/23/2020 02:18:33 PM | execution time: 0.24s (0h 0m 0.24s)
07/23/2020 02:18:33 PM =======


07/23/2020 02:18:33 PM ======= node ID#ID6: (LinearRegression, sklearn)
07/23/2020 02:18:33 PM | run ...

07/23/2020 02:18:33 PM ... preparing outputs:
07/23/2020 02:18:33 PM       name: obj
07/23/2020 02:18:33 PM       size: 64 bytes (total: 11712 bytes)
07/23/2020 02:18:33 PM       type: <class 'sklearn.linear_model._base.LinearRegression'>
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM 

07/23/2020 02:18:33 PM | ... done!
07/23/2020 02:18:33 PM | execution time: 0.05s (0h 0m 0.05s)
07/23/2020 02:18:33 PM =======


07/23/2020 02:18:33 PM ======= node ID#ID7: (LinearRegression, sklearn)
07/23/2020 02:18:33 PM | run ...

07/23/2020 02:18:33 PM ... preparing outputs:
07/23/2020 02:18:33 PM       name: C
07/23/2020 02:18:33 PM       size: 928 bytes (total: 1856 bytes)
07/23/2020 02:18:33 PM       type: <class 'numpy.ndarray'>
07/23/2020 02:18:33 PM       shape: (102, 1)
07/23/2020 02:18:33 PM       -----
07/23/2020 02:18:33 PM 

07/23/2020 02:18:33 PM | ... done!
07/23/2020 02:18:33 PM | execution time: 0.03s (0h 0m 0.03s)
07/23/2020 02:18:33 PM =======


07/23/2020 02:18:33 PM ======= node ID#ID8: (accuracy_score, sklearn)
07/23/2020 02:18:33 PM | run ...

