09/04/2020 01:48:51 AM =================================================
09/04/2020 01:48:51 AM ChemMLWrapper 0.6.0 (August 2019)
09/04/2020 01:48:51 AM Mojtaba Haghighatlari (mojtabah@buffalo.edu)
09/04/2020 01:48:51 AM Johannes Hachmann (hachmann@buffalo.edu)
09/04/2020 01:48:51 AM =================================================
09/04/2020 01:48:51 AM Fri Sep  4 01:48:51 2020
09/04/2020 01:48:51 AM 
09/04/2020 01:48:51 AM parsing the input dictionary ...

09/04/2020 01:48:51 AM 1   ID1: read_csv (pandas)
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         nothing to receive!
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID2
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 2   ID2: StandardScaler (sklearn)
09/04/2020 01:48:51 AM         method = fit_transform
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID1
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID3
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 3   ID3: PCA (sklearn)
09/04/2020 01:48:51 AM         method = fit_transform
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID2
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID4
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 4   ID4: SplitColumns (chemml)
09/04/2020 01:48:51 AM         method = fit
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID3
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 5   ID5: train_test_split (sklearn)
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID4
09/04/2020 01:48:51 AM         ID4
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID6
09/04/2020 01:48:51 AM         ID6
09/04/2020 01:48:51 AM         ID7
09/04/2020 01:48:51 AM         ID8
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 6   ID6: LinearRegression (sklearn)
09/04/2020 01:48:51 AM         method = fit
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID7
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 7   ID7: LinearRegression (sklearn)
09/04/2020 01:48:51 AM         method = predict
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID6
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID8
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 8   ID8: mean_absolute_error (sklearn)
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID7
09/04/2020 01:48:51 AM         ID5
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         ID9
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM 9   ID9: SaveFile (chemml)
09/04/2020 01:48:51 AM         method = write
09/04/2020 01:48:51 AM         <<<<<<< receive from:
09/04/2020 01:48:51 AM         ID8
09/04/2020 01:48:51 AM         >>>>>>> send to:
09/04/2020 01:48:51 AM         nothing to send!
09/04/2020 01:48:51 AM         
09/04/2020 01:48:51 AM =================================================
09/04/2020 01:48:51 AM * Based on the dependencies, we run nodes in the 
09/04/2020 01:48:51 AM   following order:
09/04/2020 01:48:51 AM   ['ID1']
09/04/2020 01:48:51 AM   ['ID2']
09/04/2020 01:48:51 AM   ['ID3']
09/04/2020 01:48:51 AM   ['ID4']
09/04/2020 01:48:51 AM   ['ID5']
09/04/2020 01:48:51 AM   ['ID6']
09/04/2020 01:48:51 AM   ['ID7']
09/04/2020 01:48:51 AM   ['ID8']
09/04/2020 01:48:51 AM   ['ID9']
09/04/2020 01:48:51 AM * The outputs will be stored in the following 
09/04/2020 01:48:51 AM directory: ./SrtIg
09/04/2020 01:48:51 AM 

09/04/2020 01:48:51 AM ======= node ID#ID1: (read_csv, pandas)
09/04/2020 01:48:51 AM | run ...

09/04/2020 01:48:51 AM ... preparing outputs:
09/04/2020 01:48:51 AM       name: df
09/04/2020 01:48:51 AM       size: 60736 bytes (total: 60736 bytes)
09/04/2020 01:48:51 AM       type: <class 'pandas.core.frame.DataFrame'>
09/04/2020 01:48:51 AM       shape: (506, 14)
09/04/2020 01:48:51 AM       -----
09/04/2020 01:48:51 AM 

09/04/2020 01:48:51 AM | ... done!
09/04/2020 01:48:51 AM | execution time: 0.02s (0h 0m 0.02s)
09/04/2020 01:48:51 AM =======


09/04/2020 01:48:51 AM ======= node ID#ID2: (StandardScaler, sklearn)
09/04/2020 01:48:51 AM | run ...

09/04/2020 01:48:51 AM ... preparing outputs:
09/04/2020 01:48:51 AM       name: X_new
09/04/2020 01:48:51 AM       size: 112 bytes (total: 112 bytes)
09/04/2020 01:48:51 AM       type: <class 'numpy.ndarray'>
09/04/2020 01:48:51 AM       shape: (506, 14)
09/04/2020 01:48:51 AM       -----
09/04/2020 01:48:51 AM 

09/04/2020 01:48:51 AM | ... done!
09/04/2020 01:48:51 AM | execution time: 0.01s (0h 0m 0.01s)
09/04/2020 01:48:51 AM =======


09/04/2020 01:48:51 AM ======= node ID#ID3: (PCA, sklearn)
09/04/2020 01:48:51 AM | run ...

09/04/2020 01:48:51 AM ... preparing outputs:
09/04/2020 01:48:51 AM       name: X_new
09/04/2020 01:48:51 AM       size: 112 bytes (total: 112 bytes)
09/04/2020 01:48:51 AM       type: <class 'numpy.ndarray'>
09/04/2020 01:48:51 AM       shape: (506, 14)
09/04/2020 01:48:51 AM       -----
09/04/2020 01:48:51 AM 

09/04/2020 01:48:51 AM | ... done!
09/04/2020 01:48:51 AM | execution time: 0.01s (0h 0m 0.01s)
09/04/2020 01:48:51 AM =======


09/04/2020 01:48:51 AM ======= node ID#ID4: (SplitColumns, chemml)
09/04/2020 01:48:51 AM | run ...

09/04/2020 01:48:51 AM ... preparing outputs:
09/04/2020 01:48:51 AM       name: X1
09/04/2020 01:48:51 AM       size: 112 bytes (total: 112 bytes)
09/04/2020 01:48:51 AM       type: <class 'numpy.ndarray'>
09/04/2020 01:48:51 AM       shape: (506, 1)
09/04/2020 01:48:51 AM       -----
09/04/2020 01:48:51 AM       name: X2
09/04/2020 01:48:51 AM       size: 112 bytes (total: 224 bytes)
09/04/2020 01:48:51 AM       type: <class 'numpy.ndarray'>
09/04/2020 01:48:51 AM       shape: (506, 13)
09/04/2020 01:48:51 AM       -----
09/04/2020 01:48:51 AM 

09/04/2020 01:48:51 AM | ... done!
09/04/2020 01:48:51 AM | execution time: 0.00s (0h 0m 0.00s)
09/04/2020 01:48:51 AM =======


09/04/2020 01:48:51 AM ======= node ID#ID5: (train_test_split, sklearn)
09/04/2020 01:48:51 AM | run ...

